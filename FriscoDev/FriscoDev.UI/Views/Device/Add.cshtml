
@{
    ViewBag.Title = "Add PMG";
}
@section head{
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <style>
        .margin0-set {
            margin-left: 0px;
            margin-right: 0px;
        }

        input.form-control, select.form-control {
            border-radius: 0px;
        }
    </style>
}
@section crumbs{
    <div>
        <span onclick="HomePage()" style="cursor:pointer;">Home</span>
        <span>/</span>
        <span>Administration</span>
        <span>/</span>
        <span>Add PMG</span>
    </div>
}
<div id="main-area">
    <div id="main-area-content" style="overflow:auto;">
        <nav style="">
            <div id="page-wrapper">
                <div class="row margin0-set">
                    <div class="col-sm-12">
                        <h1 style="text-align:center;">Add PMG</h1>
                    </div>
                </div>
                <div id="vue_app" class="container-fluid" style="padding-top: 20px;padding-bottom: 30px;">
                    <div class="row margin0-set">
                        <div class="col-lg-7 col-lg-offset-1 col-sm-12" style="margin-top: 20px;margin-left: 20%;">
                            <form id="addDeviceForm" class="form-horizontal">
                               
                                <div class="form-group">
                                    <label for="DeviceName" class="col-sm-4 text-right control-label">PMG Name：</label>
                                    <div class="col-sm-8">
                                        <input class="form-control" v-model="PMDName" v-validate="'required'" name="PMDName"  id="PMDName" placeholder="PMG Name" type="text" />
                                        <span v-show="errors.has('PMDName')" style="color: red;">{{ errors.first('PMDName') }}</span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DeviceType" class="col-sm-4 text-right control-label">Panel Size：</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="DeviceType" name="DeviceType" id="DeviceType" placeholder="DeviceType">
                                            <option value="1">PMG-12</option>
                                            <option value="2">PMG-15</option>
                                            <option value="3">PMG-18</option>
                                        </select>
                                       
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="Code" class="col-sm-4 text-right control-label">IMSI number：</label>
                                    <div class="col-sm-8">
                                        <span v-if="IsExist">
                                            <input class="form-control" v-model="IMSI" v-validate="'required|min:20|max:20|isExistIMSI'" name="IMSI" id="IMSI" maxlength="20" placeholder="IMSI length must be a 20 digits SIM ID" type="text">
                                        </span>
                                        <span v-else>
                                            <input class="form-control" v-model="IMSI" v-validate="'required|min:20|max:20'" name="IMSI" id="IMSI" maxlength="20" placeholder="IMSI length must be a 20 digits SIM ID" type="text">
                                        </span>
                                        <span v-show="errors.has('IMSI')" style="color: red;">{{ errors.first('IMSI') }}</span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DevCoordinateX" class="col-sm-4 text-right control-label">Coordinate X：</label>
                                    <div class="col-sm-8">
                                        <input class="form-control" v-model="DevCoordinateX" name="DevCoordinateX" id="DevCoordinateX"  placeholder="Coordinate X" type="text">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="DevCoordinateY" class="col-sm-4 text-right control-label">Coordinate Y：</label>
                                    <div class="col-sm-8">
                                        <input class="form-control" v-model="DevCoordinateY" name="DevCoordinateY" id="DevCoordinateY"  placeholder="Coordinate Y" type="text">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Address" class="col-sm-4 text-right control-label">Address：</label>
                                    <div class="col-sm-8">
                                        <input class="form-control" @@blur="writeXY" v-model="Address" v-validate="'required'"  name="Address" id="Address" placeholder="Organization" type="text">
                                        <span v-show="errors.has('Address')" style="color: red;">{{ errors.first('Address') }}</span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="City" class="col-sm-4 text-right control-label">City：</label>
                                    <div class="col-sm-8">
                                        <input class="form-control" v-model="City" name="City" id="City" placeholder="City" type="text"  >
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="State" class="col-sm-4 text-right control-label">State：</label>
                                    <div class="col-sm-8">
                                        <input class="form-control" v-model="State" name="State" id="State" placeholder="State" type="text" >
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Country" class="col-sm-4 text-right control-label">Country：</label>
                                    <input type="hidden" id="CountryName" value="" name="CountryName">
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="Country" name="Country" id="Country" >
                                            @Html.Partial("Part_Country")
                                        </select>
                                      
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="HighSpeedAlert" class="col-sm-4 text-right control-label">High Speed Alert：</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="HighSpeedAlert" name="HighSpeedAlert" id="HighSpeedAlert" placeholder="HighSpeedAlert">
                                            <option value="0">Disabled</option>
                                            @for (int i = 40; i <= 100; i = i + 5)
                                            {
                                                <option value="@i">@i</option>
                                            }
                                        </select>
                                        
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="LowSpeedAlert" class="col-sm-4 text-right control-label">Low Speed Alert：</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="LowSpeedAlert" name="LowSpeedAlert" id="LowSpeedAlert" placeholder="LowSpeedAlert">
                                            <option value="0">Disabled</option>
                                            @for (int i = 5; i <= 30; i = i + 5)
                                            {
                                                <option value="@i">@i</option>
                                            }
                                        </select>
                                     
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="StatsCollection" class="col-sm-4 text-right control-label">Stats Collection：</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="StatsCollection" name="StatsCollection" id="StatsCollection">
                                            <option value="0">No</option>
                                            <option value="1">Yes</option>
                                        </select>
                                       
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="StatsCollection" class="col-sm-4 text-right control-label">Online State：</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="Connection" name="Collection" id="Connection">
                                            <option value="0">Offline</option>
                                            <option value="1">Online</option>
                                        </select>
                                     
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="Country" class="col-sm-4 text-right control-label">Direction Facing：</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" v-model="Direction" name="Direction" id="Direction">
                                            <option value="0">North</option>
                                            <option value="45">North East</option>
                                            <option value="90">East</option>
                                            <option value="135">South East</option>
                                            <option value="180">South</option>
                                            <option value="225">South West</option>
                                            <option value="270">West</option>
                                            <option value="315">North West</option>
                                        </select>
                                       
                                    </div>
                                </div>


                                
                                <div class="form-group">
                                    <div class="col-sm-4 col-lg-3 col-lg-offset-4">
                                        <input id="add" type="button" class="button" style="width: 81px;" @@click="btnSave" value="OK">
                                    </div>
                                    <div class="col-sm-2 col-lg-2">
                                        <button type="button" class="button" onclick="location.href='/Device/Index'" role="button">Cancel</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </div>

    <div class="clearfix"></div>
</div>

@section scripts{

    <script type="text/javascript">

        var userType = "@ViewBag.UserType";
        Vue.use(VeeValidate);
        var app = new Vue({
            el: '#vue_app',
            data: {
                PMDName: '',
                IMSI: '',
                Address: '',
                City: '',
                State: '',
                Country: '840',
                CountryName: '',
                DevCoordinateX: '32.968182',
                DevCoordinateY: '-96.716446',
                Direction: '0',
                StatsCollection: '0',
                DeviceType: '1',
                HighSpeedAlert: '0',
                LowSpeedAlert: '0',
                Connection: '0'
            },
            created: function() {

            },
            computed: {
                IsExist: function() {
                    return true;
                }
            },
            methods: {
                writeXY() {
                    var address = this.Address;
                    address = StrTrim(address);
                    if (address != "") {
                        axios.post('/Device/GetLatLngToAddress',
                                {
                                    "address": encodeURI(app.Address)
                                })
                            .then(function (response) {
                                console.log(response.data);
                                if (response.data != "") {
                                    var json = JSON.parse(response.data);
                                    if (json.status == "OK") {
                                        var subObj = json.results[0].geometry.location;
                                        var _lat = subObj.lat;
                                        var _lng = subObj.lng;
                                        if (_lat != null && _lat != "") {
                                            app.DevCoordinateX=_lat;
                                            app.DevCoordinateY=_lng;
                                        }
                                    }
                                }
                            })
                            .catch(function (response) {
                                layer.close(load);
                            });
                    }
                },
                btnSave() {
                    this.$validator.validate().then((result) => {
                        if (result) {
                            var load = layer.load(2);
                            axios.post('/Device/AddDevice',
                                    {
                                        PMDName:app.PMDName,
                                        IMSI: app.IMSI,
                                        Address: app.Address,
                                        City: app.City,
                                        State: app.State,
                                        Country: app.Country,
                                        CountryName: app.CountryName,
                                        DevCoordinateX: app.DevCoordinateX,
                                        DevCoordinateY: app.DevCoordinateY,
                                        Direction: app.Direction,
                                        StatsCollection: app.StatsCollection,
                                        DeviceType: app.DeviceType,
                                        HighSpeedAlert: app.HighSpeedAlert,
                                        LowSpeedAlert: app.LowSpeedAlert,
                                        Connection: app.Connection
                                    })
                                .then(function (response) {
                                    layer.close(load);
                                    if (response.data.errorCode==200) {
                                        location.href = "/Device/Index";
                                    } else {
                                        layer.msg(response.data.errorStr, { icon: 2, time: 1500 }, function () { });
                                    }
                                })
                                .catch(function (response) {
                                    layer.close(load);
                                });
                            return;
                        }
                        //alert('error');
                    });
                }
            },
            mounted() {
                const isUnique = value =>
                    new Promise(resolve => {
                        setTimeout(() => {
                            axios.post('/Device/isExistIMSI', { imsi: value }).then((response) => {
                                if (response.data==1) {
                                    return resolve({
                                        valid: false,
                                        data: {
                                            message: `IMSI length must be a 20 digits SIM ID`
                                        }
                                    });
                                } else {
                                    return resolve({
                                        valid: true,
                                    });
                                }
                            });
                        },200);
                    });
                this.$validator.extend("isExistIMSI",
                    {
                        validate: isUnique,
                        getMessage: (field, params, data) => data.message
                    });
            }
        });

    </script>
}



